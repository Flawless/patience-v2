---
- name: Extract major.minor version for repo
  set_fact:
    k8s_repo_version: "{{ kubernetes_version.split('.')[:2] | join('.') }}"

- name: Create apt keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes apt signing key
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v{{ k8s_repo_version }}/deb/Release.key
    dest: /tmp/kubernetes.key
    mode: '0644'

- name: Add Kubernetes GPG key to keyring
  shell: |
    cat /tmp/kubernetes.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes apt repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ k8s_repo_version }}/deb /"
    state: present
    filename: kubernetes

- name: Find exact package version
  shell: apt-cache madison kubelet | grep {{ kubernetes_version }} | awk '{print $3}' | head -1
  register: k8s_full_version
  changed_when: false

- name: Debug package version
  debug:
    var: k8s_full_version.stdout

- name: Install Kubernetes packages
  apt:
    name:
      - "kubelet={{ k8s_full_version.stdout }}"
      - "kubeadm={{ k8s_full_version.stdout }}"
      - "kubectl={{ k8s_full_version.stdout }}"
    state: present
  when: k8s_full_version.stdout != ""

# Prevent automatic updates that could break cluster compatibility
- name: Hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl
  when: ansible_os_family == "Debian"
  tags: kubernetes

- name: Create kubeadm config file
  template:
    src: kubeadm-config.yaml.j2
    dest: /etc/kubernetes/kubeadm-config.yaml
  tags: kubernetes
