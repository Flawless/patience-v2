---
- name: Determine architecture for Kubernetes binaries
  set_fact:
    architecture: "{% if ansible_architecture == 'x86_64' %}amd64{% elif ansible_architecture == 'aarch64' %}arm64{% else %}{{ ansible_architecture }}{% endif %}"
  tags: kubernetes

- name: Install required dependencies for kubeadm
  apt:
    name:
      - socat
      - conntrack
      - ebtables
      - apt-transport-https
      - ca-certificates
      - gnupg
      - curl
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install crictl
  block:
    - name: Download crictl
      get_url:
        url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/v{{ crictl_version | default('1.29.0') }}/crictl-v{{ crictl_version | default('1.29.0') }}-linux-{{ architecture }}.tar.gz"
        dest: /tmp/crictl.tar.gz
        mode: '0644'

    - name: Extract crictl
      unarchive:
        src: /tmp/crictl.tar.gz
        dest: /usr/local/bin
        remote_src: yes
        creates: /usr/local/bin/crictl

    - name: Set permissions on crictl
      file:
        path: /usr/local/bin/crictl
        mode: '0755'

- name: Create temporary directory for Kubernetes downloads
  file:
    path: /tmp/k8s-install
    state: directory
    mode: '0755'
  tags: kubernetes

- name: Download Kubernetes binaries
  get_url:
    url: "https://dl.k8s.io/v{{ kubernetes_version }}/bin/linux/{{ architecture }}/{{ item }}"
    dest: "/tmp/k8s-install/{{ item }}"
    mode: '0755'
  with_items: "{{ kubernetes_packages }}"
  tags: kubernetes

- name: Install Kubernetes binaries
  copy:
    src: "/tmp/k8s-install/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: '0755'
    remote_src: yes
  with_items: "{{ kubernetes_packages }}"
  tags: kubernetes

- name: Cleanup temporary files
  file:
    path: /tmp/k8s-install
    state: absent
  tags: kubernetes

- name: Create kubelet systemd service file
  template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    owner: root
    group: root
    mode: '0644'
  notify: Restart kubelet
  tags: kubernetes

- name: Create kubelet default configuration
  template:
    src: kubelet-defaults.j2
    dest: /etc/default/kubelet
    owner: root
    group: root
    mode: '0644'
  notify: Restart kubelet
  tags: kubernetes

- name: Create required directories for kubelet
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - /etc/kubernetes
    - /etc/kubernetes/manifests
    - /var/lib/kubelet
  tags: kubernetes

- name: Create kubeadm config file
  template:
    src: kubeadm-config.yaml.j2
    dest: /etc/kubernetes/kubeadm-config.yaml
  tags: kubernetes
